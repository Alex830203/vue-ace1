{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3b379ae0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  style: {\n    \"margin-top\": \"4%\"\n  }\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"userCode\",\n  class: \"custom-label\"\n}, \"用戶名：\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"timeFrom\",\n  class: \"custom-label\"\n}, \"開始時間：\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"timeTo\",\n  class: \"custom-label\"\n}, \"結束時間：\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  style: {\n    \"display\": \"flex\",\n    \"justify-content\": \"space-between\",\n    \"align-items\": \"center\",\n    \"margin-top\": \"1%\"\n  }\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"BetTypeCheck\",\n  class: \"custom-label\",\n  style: {\n    \"margin-right\": \"30px\"\n  }\n}, \"下注類型相反\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"IPCheck\",\n  class: \"custom-label\",\n  style: {\n    \"margin-right\": \"30px\"\n  }\n}, \"IP相同\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"CurrencyCheck\",\n  class: \"custom-label\",\n  style: {\n    \"margin-right\": \"30px\"\n  }\n}, \"貨幣相同\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"AgentCodeCheck\",\n  class: \"custom-label\",\n  style: {\n    \"margin-right\": \"30px\"\n  }\n}, \"代理相同\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 0,\n  class: \"loading-spinner\"\n};\nconst _hoisted_11 = {\n  class: \"custom-table\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  style: {\n    \"width\": \"5%\"\n  }\n}, \"NO.\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"投注時間\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"用戶名\", -1 /* HOISTED */));\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"貨幣\", -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"下注金額\", -1 /* HOISTED */));\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  style: {\n    \"color\": \"#de7777\"\n  }\n}, \"轉換後金額(USD)\", -1 /* HOISTED */));\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"下注類型\", -1 /* HOISTED */));\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"IP\", -1 /* HOISTED */));\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"代理\", -1 /* HOISTED */));\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"遊戲桌子\", -1 /* HOISTED */));\nconst _hoisted_22 = [\"rowspan\"];\nconst _hoisted_23 = [\"rowspan\"];\nconst _hoisted_24 = {\n  style: {\n    \"color\": \"#de7777\",\n    \"font-weight\": \"bold\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"userCode\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userCode = $event),\n    class: \"custom-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userCode]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"datetime-local\",\n    id: \"timeFrom\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.timeFrom = $event),\n    class: \"custom-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.timeFrom]]), _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"datetime-local\",\n    id: \"timeTo\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.timeTo = $event),\n    class: \"custom-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.timeTo]]), _createElementVNode(\"button\", {\n    class: \"custom-time\",\n    onClick: _cache[3] || (_cache[3] = $event => $options.setTimeRange('today'))\n  }, \"今日\"), _createElementVNode(\"button\", {\n    class: \"custom-time\",\n    onClick: _cache[4] || (_cache[4] = $event => $options.setTimeRange('yesterday'))\n  }, \"昨日\"), _createElementVNode(\"button\", {\n    class: \"custom-time\",\n    onClick: _cache[5] || (_cache[5] = $event => $options.setTimeRange('last3days'))\n  }, \"三日\"), _createElementVNode(\"button\", {\n    class: \"custom-time\",\n    onClick: _cache[6] || (_cache[6] = $event => $options.setTimeRange('thisWeek'))\n  }, \"本周\"), _createElementVNode(\"button\", {\n    class: \"custom-time\",\n    onClick: _cache[7] || (_cache[7] = $event => $options.setTimeRange('lastWeek'))\n  }, \"上周\"), _createElementVNode(\"button\", {\n    class: \"custom-time\",\n    onClick: _cache[8] || (_cache[8] = $event => $options.setTimeRange('thisMonth'))\n  }, \"本月\"), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"BetTypeCheck\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.checkBettype = $event),\n    class: \"custom-input\",\n    style: {\n      \"transform\": \"scale(2)\",\n      \"margin-left\": \"15px\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.checkBettype]]), _hoisted_6, _createCommentVNode(\" <input type=\\\"checkbox\\\" id=\\\"MoneyCheck\\\" v-model=\\\"checkMoney\\\" class=\\\"custom-input\\\" />\\n      <label for=\\\"MoneyCheck\\\" class=\\\"custom-label\\\">金額相近</label> \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"IPCheck\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.checkIP = $event),\n    class: \"custom-input\",\n    style: {\n      \"transform\": \"scale(2)\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.checkIP]]), _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"CurrencyCheck\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.checkCurrency = $event),\n    class: \"custom-input\",\n    style: {\n      \"transform\": \"scale(2)\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.checkCurrency]]), _hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"AgentCodeCheck\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.checkAgentCode = $event),\n    class: \"custom-input\",\n    style: {\n      \"transform\": \"scale(2)\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.checkAgentCode]]), _hoisted_9, _createElementVNode(\"button\", {\n    onClick: _cache[13] || (_cache[13] = (...args) => $options.submit && $options.submit(...args)),\n    class: \"custom-button\"\n  }, \"確定\"), _createElementVNode(\"button\", {\n    onClick: _cache[14] || (_cache[14] = (...args) => $options.exportCSV && $options.exportCSV(...args)),\n    class: \"custom-button\",\n    style: {\n      \"margin-left\": \"auto\",\n      \"margin-right\": \"1%\"\n    }\n  }, \" 導出CSV \")]), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"搜尋中...\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_createElementVNode(\"table\", _hoisted_11, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_12, _createElementVNode(\"th\", null, \"牌局號 (\" + _toDisplayString(Object.keys($data.organizedData).length) + \")\", 1 /* TEXT */), _hoisted_13, _hoisted_14, _hoisted_15, _hoisted_16, _hoisted_17, _hoisted_18, _hoisted_19, _hoisted_20, _hoisted_21])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.organizedData, (bets, roundCode, index) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: roundCode\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(bets, (bet, betIndex) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: bet.betId\n      }, [betIndex === 0 ? (_openBlock(), _createElementBlock(\"td\", {\n        key: 0,\n        rowspan: bets.length\n      }, _toDisplayString(index + 1), 9 /* TEXT, PROPS */, _hoisted_22)) : _createCommentVNode(\"v-if\", true), betIndex === 0 ? (_openBlock(), _createElementBlock(\"td\", {\n        key: 1,\n        rowspan: bets.length\n      }, _toDisplayString(roundCode), 9 /* TEXT, PROPS */, _hoisted_23)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"td\", null, _toDisplayString($options.formatTime(bet.betTime)), 1 /* TEXT */), _createElementVNode(\"td\", {\n        class: _normalizeClass({\n          highlight: bet.userCode === $data.userCode\n        })\n      }, _toDisplayString(bet.userCode), 3 /* TEXT, CLASS */), _createElementVNode(\"td\", null, _toDisplayString(bet.currencyCode), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(bet.betAmt), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_24, _toDisplayString(bet.ConbetAmt), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($data.betCodeMapping[bet.betCode] || bet.betCode), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(bet.sessionIp), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(bet.agentCode), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($data.gameCodeMapping[bet.gameCode] || bet.gameCode), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["style","_createElementVNode","for","class","_hoisted_1","_hoisted_2","type","id","$data","userCode","$event","_hoisted_3","timeFrom","_hoisted_4","timeTo","onClick","_cache","$options","setTimeRange","_hoisted_5","checkBettype","_hoisted_6","_createCommentVNode","checkIP","_hoisted_7","checkCurrency","_hoisted_8","checkAgentCode","_hoisted_9","args","submit","exportCSV","loading","_createElementBlock","_hoisted_10","_hoisted_11","_hoisted_12","_toDisplayString","Object","keys","organizedData","length","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_Fragment","_renderList","bets","roundCode","index","bet","betIndex","key","betId","rowspan","_hoisted_22","_hoisted_23","formatTime","betTime","_normalizeClass","highlight","currencyCode","betAmt","_hoisted_24","ConbetAmt","betCodeMapping","betCode","sessionIp","agentCode","gameCodeMapping","gameCode"],"sources":["C:\\Users\\u0921\\vue-ace1\\src\\components\\Crossbetpage.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <div style=\"margin-top: 4%\">\n    <label for=\"userCode\" class=\"custom-label\">用戶名：</label>\n    <input type=\"text\" id=\"userCode\" v-model=\"userCode\" class=\"custom-input\" />\n\n    <label for=\"timeFrom\" class=\"custom-label\">開始時間：</label>\n    <input type=\"datetime-local\" id=\"timeFrom\" v-model=\"timeFrom\" class=\"custom-input\" />\n\n    <label for=\"timeTo\" class=\"custom-label\">結束時間：</label>\n    <input type=\"datetime-local\" id=\"timeTo\" v-model=\"timeTo\" class=\"custom-input\" />\n\n    <button class=\"custom-time\" @click=\"setTimeRange('today')\">今日</button>\n    <button class=\"custom-time\" @click=\"setTimeRange('yesterday')\">昨日</button>\n    <button class=\"custom-time\" @click=\"setTimeRange('last3days')\">三日</button>\n    <button class=\"custom-time\" @click=\"setTimeRange('thisWeek')\">本周</button>\n    <button class=\"custom-time\" @click=\"setTimeRange('lastWeek')\">上周</button>\n    <button class=\"custom-time\" @click=\"setTimeRange('thisMonth')\">本月</button>\n\n    <div\n      style=\"\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-top: 1%;\n      \"\n    >\n      <input\n        type=\"checkbox\"\n        id=\"BetTypeCheck\"\n        v-model=\"checkBettype\"\n        class=\"custom-input\"\n        style=\"transform: scale(2); margin-left: 15px\"\n      />\n      <label for=\"BetTypeCheck\" class=\"custom-label\" style=\"margin-right: 30px\"\n        >下注類型相反</label\n      >\n\n      <!-- <input type=\"checkbox\" id=\"MoneyCheck\" v-model=\"checkMoney\" class=\"custom-input\" />\n      <label for=\"MoneyCheck\" class=\"custom-label\">金額相近</label> -->\n\n      <input\n        type=\"checkbox\"\n        id=\"IPCheck\"\n        v-model=\"checkIP\"\n        class=\"custom-input\"\n        style=\"transform: scale(2)\"\n      />\n      <label for=\"IPCheck\" class=\"custom-label\" style=\"margin-right: 30px\">IP相同</label>\n\n      <input\n        type=\"checkbox\"\n        id=\"CurrencyCheck\"\n        v-model=\"checkCurrency\"\n        class=\"custom-input\"\n        style=\"transform: scale(2)\"\n      />\n      <label for=\"CurrencyCheck\" class=\"custom-label\" style=\"margin-right: 30px\"\n        >貨幣相同</label\n      >\n\n      <input\n        type=\"checkbox\"\n        id=\"AgentCodeCheck\"\n        v-model=\"checkAgentCode\"\n        class=\"custom-input\"\n        style=\"transform: scale(2)\"\n      />\n      <label for=\"AgentCodeCheck\" class=\"custom-label\" style=\"margin-right: 30px\"\n        >代理相同</label\n      >\n\n      <button @click=\"submit\" class=\"custom-button\">確定</button>\n      <button\n        @click=\"exportCSV\"\n        class=\"custom-button\"\n        style=\"margin-left: auto; margin-right: 1%\"\n      >\n        導出CSV\n      </button>\n    </div>\n    <div v-if=\"loading\" class=\"loading-spinner\">搜尋中...</div>\n  </div>\n  <div>\n    <table class=\"custom-table\">\n      <thead>\n        <tr>\n          <th style=\"width: 5%\">NO.</th>\n          <th>牌局號 ({{ Object.keys(organizedData).length }})</th>\n          <th>投注時間</th>\n          <th>用戶名</th>\n          <th>貨幣</th>\n          <th>下注金額</th>\n          <th style=\"color: #de7777\">轉換後金額(USD)</th>\n          <th>下注類型</th>\n          <th>IP</th>\n          <th>代理</th>\n          <th>遊戲桌子</th>\n        </tr>\n      </thead>\n      <tbody>\n        <template v-for=\"(bets, roundCode, index) in organizedData\" :key=\"roundCode\">\n          <tr v-for=\"(bet, betIndex) in bets\" :key=\"bet.betId\">\n            <td v-if=\"betIndex === 0\" :rowspan=\"bets.length\">{{ index + 1 }}</td>\n            <td v-if=\"betIndex === 0\" :rowspan=\"bets.length\">{{ roundCode }}</td>\n            <td>{{ formatTime(bet.betTime) }}</td>\n            <td :class=\"{ highlight: bet.userCode === userCode }\">\n              {{ bet.userCode }}\n            </td>\n            <td>{{ bet.currencyCode }}</td>\n            <td>{{ bet.betAmt }}</td>\n            <td style=\"color: #de7777; font-weight: bold\">\n              {{ bet.ConbetAmt }}\n            </td>\n            <td>{{ betCodeMapping[bet.betCode] || bet.betCode }}</td>\n            <td>{{ bet.sessionIp }}</td>\n            <td>{{ bet.agentCode }}</td>\n            <td>{{ gameCodeMapping[bet.gameCode] || bet.gameCode }}</td>\n          </tr>\n        </template>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport dataMapping from \"./data.json\";\n\nexport default {\n  props: {\n    token: {\n      type: String,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      userCode: \"\",\n      roundCode: \"\",\n      timeFrom: \"\",\n      timeTo: \"\",\n      page: 1,\n      pageSize: 5000,\n      responseData: null,\n      responseData2: null,\n      responseData3: null,\n      organizedData: {},\n      userSessionIp: null,\n      checkBettype: false,\n      checkMoney: false,\n      checkIP: false,\n      checkCurrency: false,\n      checkAgentCode: false,\n      validPairs: [],\n      userSessionIpNoDup: [],\n      betCodeMapping: dataMapping.betCode,\n      gameCodeMapping: dataMapping.gameCode,\n      //匯率表\n      exchangeRates: {},\n      loading: false,\n    };\n  },\n\n  methods: {\n    async submit() {\n      if (!this.userCode) {\n        // 用戶名為空，顯示錯誤信息並中止提交\n        alert(\"用戶名不能為空\");\n        return;\n      }\n      if (!this.timeFrom) {\n        // 時間為空，顯示錯誤信息並中止提交\n        alert(\"時間不能為空\");\n        return;\n      }\n      if (!this.timeTo) {\n        // 時間為空，顯示錯誤信息並中止提交\n        alert(\"時間不能為空\");\n        return;\n      }\n\n      (this.organizedData = {}), (this.loading = true);\n\n      try {\n        //請求匯率表\n        const response3 = await axios.post(\n          \"https://nc-ugs-bo.ms16618.com/mgtapipb.MgtApiService/CurrencyList\",\n          {},\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              accept: \"application/json\",\n              Authorization: `Bearer ${this.token}`, // 在這裡添加 token 到標頭中\n            },\n          }\n        );\n\n        // 將API返回的數據保存在responseData中，以便在模板中顯示\n        this.responseData3 = response3.data.data;\n        console.log(`請求匯率表：`, this.responseData3);\n\n        // 遍歷 responseData3，構建 exchangeRates 對象\n        this.responseData3.forEach((rate) => {\n          const currencyCode = rate.currencyCode;\n          const currencyRate = rate.currencyRate;\n\n          // 將 currencyCode 和 currencyRate 添加到 exchangeRates 對象\n          this.exchangeRates[currencyCode] = currencyRate;\n        });\n        console.log(`匯率表：`, this.exchangeRates);\n\n        const response = await axios.post(\n          \"https://nc-ugs-bo.ms16618.com/mgtapipb.MgtApiService/RptBetRec\",\n          {\n            userCode: this.userCode,\n            timeFrom: this.timeFrom + \":00\",\n            timeTo: this.timeTo + \":00\",\n            page: this.page,\n            pageSize: this.pageSize,\n            roundCode: this.roundCode,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              accept: \"application/json\",\n              Authorization: `Bearer ${this.token}`, // 在這裡添加 token 到標頭中\n            },\n          }\n        );\n\n        // 將API返回的數據保存在responseData中，以便在模板中顯示\n        this.responseData = response.data;\n        console.log(`${this.userCode}的data：`, this.responseData);\n\n        // 過濾重複的 userSessionIp\n        const userSessionIpSet = new Set(response.data.data.map((bet) => bet.sessionIp));\n        this.userSessionIpNoDup = Array.from(userSessionIpSet);\n        console.log(\"過濾重複的 userSessionIp : \", this.userSessionIpNoDup);\n\n        // 過濾重複的 roundCode\n        const roundCodeSet = new Set(response.data.data.map((bet) => bet.roundCode));\n        const roundCodeNoDup = Array.from(roundCodeSet);\n        console.log(\"過濾重複的 roundCode : \", roundCodeNoDup);\n        console.log(\"Round Codes: \", roundCodeNoDup.join(\",\"));\n\n        const response2 = await axios.post(\n          \"https://nc-ugs-bo.ms16618.com/mgtapipb.MgtApiService/RptBetRec\",\n          {\n            page: this.page,\n            timeFrom: this.timeFrom + \":00\",\n            timeTo: this.timeTo + \":00\",\n            pageSize: this.pageSize,\n            roundCode: roundCodeNoDup.join(\",\"), // 使用逗號分隔的字符串\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              accept: \"application/json\",\n              Authorization: `Bearer ${this.token}`,\n            },\n          }\n        );\n\n        // 处理第二个请求的响应数据\n        this.responseData2 = response2.data;\n        console.log(`${this.userCode}的data：`, this.responseData2);\n\n        // 重新整理的資料\n        this.organizedData = {};\n\n        this.responseData2.data.forEach((bet) => {\n          // 使用 bet 中的 `roundCode` 作为 key\n          const roundCode = bet.roundCode;\n\n          // 检查该 `roundCode` 在 organizedData 中是否已存在，如果不存在则创建一个数组\n          // eslint-disable-next-line no-prototype-builtins\n          if (!this.organizedData.hasOwnProperty(roundCode)) {\n            this.organizedData[roundCode] = [];\n          }\n\n          // 将当前投注记录添加到相应的数组中\n          this.organizedData[roundCode].push({\n            userCode: bet.userCode,\n            betTime: bet.betTime,\n            currencyCode: bet.currencyCode,\n            betAmt: bet.betAmt,\n            betCode: bet.betCode,\n            sessionIp: bet.sessionIp,\n            agentCode: bet.agentCode,\n            gameType: bet.gameType,\n            gameCode: bet.gameCode,\n            ConbetAmt: this.convertCurrency(bet.betAmt, bet.currencyCode),\n          });\n        });\n\n        this.handleBetTypeCheck();\n        // this.handleMoneyCheck();\n        this.handleIPCheck();\n\n        this.handleCurrencyCheck();\n\n        this.handleAgentCodeCheck();\n\n        console.log(`organizedData：`, this.organizedData);\n\n        this.loading = false;\n      } catch (error) {\n        // 請求失敗\n        this.loading = false;\n        console.error(\"請求失敗：\", error);\n      }\n    },\n\n    handleIPCheck() {\n      // 处理IP相同的逻辑\n      if (this.checkIP) {\n        for (const roundCode in this.organizedData) {\n          // eslint-disable-next-line no-prototype-builtins\n          if (this.organizedData.hasOwnProperty(roundCode)) {\n            // 获取当前局的所有投注记录\n            const bets = this.organizedData[roundCode];\n\n            // 使用一个 Set 来记录每个 IP 对应的 userCode\n            const ipUserCodeSet = new Map();\n\n            // 遍历当前局的所有投注记录\n            bets.forEach((bet) => {\n              const ip = bet.sessionIp;\n              const userCode = bet.userCode;\n\n              // 如果 Set 中不存在该 IP 对应的 userCode，则加入 Set\n              if (!ipUserCodeSet.has(ip)) {\n                ipUserCodeSet.set(ip, new Set());\n              }\n              ipUserCodeSet.get(ip).add(userCode);\n            });\n\n            // 筛选出符合条件的投注记录\n            const filteredBets = bets.filter((bet) => {\n              const ip = bet.sessionIp;\n              const userCodeSet = ipUserCodeSet.get(ip);\n\n              // 保留同一局有不同userCode的投注记录\n              return userCodeSet.size >= 2 && userCodeSet.has(this.userCode);\n            });\n\n            // 更新当前局的投注记录\n            this.organizedData[roundCode] = filteredBets;\n\n            // 如果该 roundCode 的投注记录被完全过滤掉，移除该 roundCode\n            if (filteredBets.length === 0) {\n              delete this.organizedData[roundCode];\n            }\n          }\n        }\n      }\n    },\n\n    handleBetTypeCheck() {\n      // 處理下注類型相反的邏輯\n      if (this.checkBettype) {\n        for (const roundCode in this.organizedData) {\n          // eslint-disable-next-line no-prototype-builtins\n          if (this.organizedData.hasOwnProperty(roundCode)) {\n            // 獲取當前局的所有投注記錄\n            const bets = this.organizedData[roundCode];\n\n            // 過濾出符合規定的配對組合的投注記錄\n            const filteredBets = bets.filter((currentBet) => {\n              const currentBetCode = currentBet.betCode;\n\n              // 檢查是否存在其他玩家的betCode和當前玩家的betCode可以配對\n              return bets.some((otherBet) => {\n                const otherBetCode = otherBet.betCode;\n\n                // 檢查是否為符合條件的配對組合，且其他玩家是查询的用户或当前玩家\n                return (\n                  currentBetCode !== otherBetCode && // 不是同一個betCode\n                  this.isValidBetCodePair(currentBetCode, otherBetCode) &&\n                  (this.userCode === otherBet.userCode ||\n                    this.userCode === currentBet.userCode)\n                );\n              });\n            });\n\n            // 更新當前局的投注記錄\n            this.organizedData[roundCode] = filteredBets;\n\n            // 如果該 roundCode 的投注記錄被完全過濾掉，移除該 roundCode\n            if (filteredBets.length === 0) {\n              delete this.organizedData[roundCode];\n            }\n          }\n        }\n      }\n    },\n\n    handleCurrencyCheck() {\n      // 处理货币相同的逻辑\n      if (this.checkCurrency) {\n        for (const roundCode in this.organizedData) {\n          // eslint-disable-next-line no-prototype-builtins\n          if (this.organizedData.hasOwnProperty(roundCode)) {\n            // 获取当前局的所有投注记录\n            const bets = this.organizedData[roundCode];\n\n            // 使用一个 Set 来记录每个 currencyCode 对应的 userCode\n            const currencyCodeUserCodeSet = new Map();\n\n            // 遍历当前局的所有投注记录\n            bets.forEach((bet) => {\n              const currencyCode = bet.currencyCode;\n              const userCode = bet.userCode;\n\n              // 如果 Set 中不存在该 currencyCode 对应的 userCode，则加入 Set\n              if (!currencyCodeUserCodeSet.has(currencyCode)) {\n                currencyCodeUserCodeSet.set(currencyCode, new Set());\n              }\n              currencyCodeUserCodeSet.get(currencyCode).add(userCode);\n            });\n\n            // 筛选出符合条件的投注记录，仅当查询的用户与其他用户具有相同代理时才进行过滤\n            const filteredBets = bets.filter((bet) => {\n              const currencyCode = bet.currencyCode;\n              const userCodeSet = currencyCodeUserCodeSet.get(currencyCode);\n\n              // 保留同一局有查询的用户和其他用户的投注记录\n              return userCodeSet.size >= 2 && userCodeSet.has(this.userCode);\n            });\n\n            // 更新当前局的投注记录\n            this.organizedData[roundCode] = filteredBets;\n\n            // 如果该 roundCode 的投注记录被完全过滤掉，移除该 roundCode\n            if (filteredBets.length === 0) {\n              delete this.organizedData[roundCode];\n            }\n          }\n        }\n      }\n    },\n\n    handleAgentCodeCheck() {\n      // 处理代理相同的逻辑\n      if (this.checkAgentCode) {\n        for (const roundCode in this.organizedData) {\n          // eslint-disable-next-line no-prototype-builtins\n          if (this.organizedData.hasOwnProperty(roundCode)) {\n            // 获取当前局的所有投注记录\n            const bets = this.organizedData[roundCode];\n\n            // 使用一个 Set 来记录每个 agentCode 对应的 userCode\n            const agentCodeUserCodeSet = new Map();\n\n            // 遍历当前局的所有投注记录\n            bets.forEach((bet) => {\n              const agentCode = bet.agentCode;\n              const userCode = bet.userCode;\n\n              // 如果 Set 中不存在该 agentCode 对应的 userCode，则加入 Set\n              if (!agentCodeUserCodeSet.has(agentCode)) {\n                agentCodeUserCodeSet.set(agentCode, new Set());\n              }\n              agentCodeUserCodeSet.get(agentCode).add(userCode);\n            });\n\n            // 筛选出符合条件的投注记录，仅当查询的用户与其他用户具有相同代理时才进行过滤\n            const filteredBets = bets.filter((bet) => {\n              const agentCode = bet.agentCode;\n              const userCodeSet = agentCodeUserCodeSet.get(agentCode);\n\n              // 保留同一局有查询的用户和其他用户的投注记录\n              return userCodeSet.size >= 2 && userCodeSet.has(this.userCode);\n            });\n\n            // 更新当前局的投注记录\n            this.organizedData[roundCode] = filteredBets;\n\n            // 如果该 roundCode 的投注记录被完全过滤掉，移除该 roundCode\n            if (filteredBets.length === 0) {\n              delete this.organizedData[roundCode];\n            }\n          }\n        }\n      }\n    },\n\n    //對投表\n    isValidBetCodePair(betCode1, betCode2) {\n      // 定義有效的BetCode組合\n      this.validPairs = [\n        [\"PLAYER\", \"BANKER\"],\n        [\"PLAYER\", \"SUPER_SIX_BANKER\"],\n        [\"DRAGON\", \"TIGER\"],\n        [\"ODD\", \"EVEN\"],\n        [\"BLACK\", \"RED\"],\n        [\"BIG\", \"SMALL\"],\n        [\"DRAGON\", \"PHOENIX\"],\n        [\"KWOK_23\", \"KWOK_41\"],\n        [\"KWOK_12\", \"KWOK_34\"],\n        [\"BANKER1_MUL\", \"PLAYER1_MUL\"],\n        [\"BANKER1_NOR\", \"PLAYER1_NOR\"],\n        [\"BANKER2_MUL\", \"PLAYER2_MUL\"],\n        [\"BANKER2_NOR\", \"PLAYER2_NOR\"],\n        [\"BANKER3_MUL\", \"PLAYER3_MUL\"],\n        [\"BANKER3_NOR\", \"PLAYER3_NOR\"],\n        // 添加更多的組合...\n      ];\n\n      // 檢查是否為有效的BetCode組合\n      return this.validPairs.some((pair) => {\n        return (\n          (pair[0] === betCode1 && pair[1] === betCode2) ||\n          (pair[0] === betCode2 && pair[1] === betCode1)\n        );\n      });\n    },\n\n    // 匯率換算\n    convertCurrency(amount, currencyCode) {\n      // 檢查是否有對應的匯率\n      // eslint-disable-next-line no-prototype-builtins\n      if (this.exchangeRates.hasOwnProperty(currencyCode)) {\n        // 使用匯率換算金額\n        return (amount * this.exchangeRates[currencyCode]).toFixed(2);\n      } else {\n        // 如果沒有對應的匯率，返回原始金額\n        return amount;\n      }\n    },\n\n    // 時間轉換\n    formatTime(time) {\n      const options = {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\",\n        hour12: false,\n        timeZone: \"Asia/Taipei\",\n      };\n\n      return new Date(time).toLocaleString(\"zh-TW\", options);\n    },\n\n    exportCSV() {\n      // 获取 organizedData 中所有的 roundCode\n      const roundCodes = Object.keys(this.organizedData);\n\n      // 创建CSV内容\n      let csvContent =\n        \"牌局號,投注時間,用戶名,貨幣,下注金額,轉換後金額(USD),下注類型,IP,代理\\n\";\n\n      // 遍历 organizedData 中的数据\n      roundCodes.forEach((roundCode) => {\n        const roundData = this.organizedData[roundCode];\n\n        roundData.forEach((bet) => {\n          // 添加每一行的数据\n          csvContent += `${roundCode},${bet.betTime},${bet.userCode},${bet.currencyCode},${bet.betAmt},${bet.ConbetAmt},${bet.betCode},${bet.sessionIp},${bet.agentCode}\\n`;\n        });\n      });\n\n      // 创建一个Blob对象，用于下载CSV\n      const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\n\n      // 使用URL.createObjectURL创建URL并生成下载链接\n      const link = document.createElement(\"a\");\n      if (link.download !== undefined) {\n        const url = URL.createObjectURL(blob);\n        link.setAttribute(\"href\", url);\n        link.setAttribute(\"download\", \"對投查詢.csv\");\n\n        // 立即触发点击以模拟用户操作\n        link.style.visibility = \"hidden\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    },\n\n    setTimeRange(range) {\n      const now = new Date();\n      switch (range) {\n        case \"today\":\n          this.timeFrom = this.formatDate(\n            new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0)\n          );\n          this.timeTo = this.formatDate(\n            new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 0, 0)\n          );\n          break;\n        case \"yesterday\":\n          // eslint-disable-next-line no-case-declarations\n          const yesterday = new Date(now);\n          yesterday.setDate(now.getDate() - 1);\n          this.timeFrom = this.formatDate(\n            new Date(\n              yesterday.getFullYear(),\n              yesterday.getMonth(),\n              yesterday.getDate(),\n              0,\n              0\n            )\n          );\n          this.timeTo = this.formatDate(\n            new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0)\n          );\n          break;\n        case \"last3days\":\n          // eslint-disable-next-line no-case-declarations\n          const threeDaysAgo = new Date(now);\n          threeDaysAgo.setDate(now.getDate() - 2); // 最近三天包括今天，所以减2\n          this.timeFrom = this.formatDate(\n            new Date(\n              threeDaysAgo.getFullYear(),\n              threeDaysAgo.getMonth(),\n              threeDaysAgo.getDate(),\n              0,\n              0\n            )\n          );\n          this.timeTo = this.formatDate(\n            new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 0, 0)\n          );\n          break;\n        case \"thisWeek\":\n          // eslint-disable-next-line no-case-declarations\n          const thisMonday = new Date(now);\n          thisMonday.setDate(\n            now.getDate() - now.getDay() + (now.getDay() === 0 ? -6 : 1)\n          );\n          this.timeFrom = this.formatDate(\n            new Date(\n              thisMonday.getFullYear(),\n              thisMonday.getMonth(),\n              thisMonday.getDate(),\n              0,\n              0\n            )\n          );\n          this.timeTo = this.formatDate(\n            new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1, 0, 0)\n          );\n          break;\n        case \"lastWeek\":\n          // eslint-disable-next-line no-case-declarations\n          const lastMonday = new Date(now);\n          lastMonday.setDate(now.getDate() - now.getDay() - 6);\n          // eslint-disable-next-line no-case-declarations\n          const lastSunday = new Date(now);\n          lastSunday.setDate(now.getDate() - now.getDay());\n          this.timeFrom = this.formatDate(\n            new Date(\n              lastMonday.getFullYear(),\n              lastMonday.getMonth(),\n              lastMonday.getDate(),\n              0,\n              0\n            )\n          );\n          this.timeTo = this.formatDate(\n            new Date(\n              lastSunday.getFullYear(),\n              lastSunday.getMonth(),\n              lastSunday.getDate() + 1,\n              0,\n              0\n            )\n          );\n          break;\n        case \"thisMonth\":\n          // eslint-disable-next-line no-case-declarations\n          const firstDayOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n          this.timeFrom = this.formatDate(\n            new Date(\n              firstDayOfMonth.getFullYear(),\n              firstDayOfMonth.getMonth(),\n              firstDayOfMonth.getDate(),\n              0,\n              0\n            )\n          );\n          this.timeTo = this.formatDate(\n            new Date(\n              now.getFullYear(),\n              now.getMonth(),\n              new Date(now.getFullYear(), now.getMonth() + 1, 0).getDate() + 1,\n              0,\n              0\n            )\n          );\n          break;\n      }\n    },\n    // 格式化日期为适合datetime-local的格式\n    formatDate(date) {\n      const year = date.getFullYear();\n      const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n      const day = date.getDate().toString().padStart(2, \"0\");\n      const hours = date.getHours().toString().padStart(2, \"0\");\n      const minutes = date.getMinutes().toString().padStart(2, \"0\");\n      return `${year}-${month}-${day}T${hours}:${minutes}`;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.custom-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\n.custom-table th,\n.custom-table td {\n  border: 1px solid #dfd8d8;\n  padding: 8px;\n  text-align: left;\n  text-align: center;\n}\n\n.custom-table ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.custom-table th {\n  background-color: #e8f0e2;\n  width: 300px;\n}\n.custom-table tbody tr:nth-child(odd) {\n  background-color: #e9f0f1;\n}\n\n.custom-table tbody tr:nth-child(even) {\n  background-color: #e7eced;\n}\n\n.custom-table tbody tr:hover {\n  background-color: #f2f2f2;\n}\n\n.custom-label {\n  color: #000000;\n  font-size: 20px;\n  font-weight: bold;\n}\n\n.custom-input {\n  padding: 8px;\n  border: 1px solid #336699;\n  border-radius: 5px;\n  font-size: 14px;\n  margin-right: 1%;\n}\n\n.custom-time {\n  background-color: #d2f7f1;\n  color: #000000;\n  padding: 8px 12px;\n  border: none;\n  margin: 3px;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer; /* 指針樣式 */\n}\n\n.custom-time:hover {\n  background-color: rgb(204, 238, 189);\n  color: white;\n  cursor: pointer;\n}\n\n.custom-button {\n  background-color: #ddebd1;\n  color: #000000;\n  padding: 8px 12px;\n  margin: 3px;\n\n  border: none;\n  border-radius: 10px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer; /* 指針樣式 */\n}\n\n.custom-button:hover {\n  background-color: #a6c0e8;\n  color: white;\n  cursor: pointer;\n}\n\n.sub-title {\n  color: #766f6f;\n  font-size: 16px;\n  margin-top: 1px;\n}\n\n.loading-spinner {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(255, 255, 255, 0.8);\n  padding: 30px;\n  border-radius: 5px;\n}\n\n.highlight {\n  color: rgb(75, 179, 71);\n  font-weight: bold;\n  font-size: 20px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}