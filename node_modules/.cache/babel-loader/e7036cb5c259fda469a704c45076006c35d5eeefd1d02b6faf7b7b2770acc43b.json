{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"menu\"\n};\nconst _hoisted_3 = {\n  class: \"page\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"login\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"info\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_H2 = _resolveComponent(\"H2\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_router_link, {\n    to: \"/\",\n    class: \"router\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"首頁\")]),\n    _: 1\n  }), $data.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_router_link, {\n    to: {\n      path: '/suspiciousplayer',\n      query: {\n        token: $data.isLoggedIn ? $data.userToken : null\n      }\n    },\n    class: \"router\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"可疑玩家\")]),\n    _: 1\n  }, 8, [\"to\"]), _createVNode(_component_router_link, {\n    to: {\n      path: '/crossbet',\n      query: {\n        token: $data.isLoggedIn ? $data.userToken : null\n      }\n    },\n    class: \"router\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"對投查詢\")]),\n    _: 1\n  }, 8, [\"to\"]), _createVNode(_component_router_link, {\n    to: {\n      path: '/playroad',\n      query: {\n        token: $data.isLoggedIn ? $data.userToken : null\n      }\n    },\n    class: \"router\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"玩家路書\")]),\n    _: 1\n  }, 8, [\"to\"]), _createVNode(_component_router_link, {\n    to: {\n      path: '/api',\n      query: {\n        token: $data.isLoggedIn ? $data.userToken : null\n      }\n    },\n    class: \"router\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"API\")]),\n    _: 1\n  }, 8, [\"to\"])])) : _createCommentVNode(\"\", true)]), !$data.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userCode = $event),\n    type: \"text\",\n    placeholder: \"帳號\",\n    class: \"input\"\n  }, null, 512), [[_vModelText, $data.userCode]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userPwd = $event),\n    type: \"password\",\n    placeholder: \"密碼\",\n    class: \"input\"\n  }, null, 512), [[_vModelText, $data.userPwd]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.login && $options.login(...args)),\n    class: \"button\"\n  }, \"登入\")])) : _createCommentVNode(\"\", true), $data.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_H2, {\n    style: {\n      \"margin-right\": \"10px\",\n      \"color\": \"#817777\"\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($data.currentTime), 1)]),\n    _: 1\n  }), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.logout && $options.logout(...args)),\n    class: \"button\"\n  }, \"登出\")])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", null, [_createVNode(_component_router_view)])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_router_link","to","$data","isLoggedIn","_hoisted_4","userToken","path","query","token","_hoisted_5","userCode","$event","type","placeholder","userPwd","onClick","_cache","args","$options","login","_hoisted_6","_component_H2","style","currentTime","logout","_component_router_view"],"sources":["C:\\Users\\u0921\\vue-ace1\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"menu\">\r\n      <div class=\"page\">\r\n        <router-link to=\"/\" class=\"router\">首頁</router-link>\r\n        <div v-if=\"isLoggedIn\">\r\n          <router-link\r\n            :to=\"{\r\n              path: '/suspiciousplayer',\r\n              query: { token: isLoggedIn ? userToken : null },\r\n            }\"\r\n            class=\"router\"\r\n            >可疑玩家</router-link\r\n          >\r\n          <router-link\r\n            :to=\"{ path: '/crossbet', query: { token: isLoggedIn ? userToken : null } }\"\r\n            class=\"router\"\r\n            >對投查詢</router-link\r\n          >\r\n          <!-- <router-link\r\n            :to=\"{\r\n              path: '/currency_conversion',\r\n              query: { token: isLoggedIn ? userToken : null },\r\n            }\"\r\n            class=\"router\"\r\n            >貨幣換算</router-link\r\n          > -->\r\n          <router-link\r\n            :to=\"{ path: '/playroad', query: { token: isLoggedIn ? userToken : null } }\"\r\n            class=\"router\"\r\n            >玩家路書</router-link\r\n          >\r\n          <router-link\r\n            :to=\"{ path: '/api', query: { token: isLoggedIn ? userToken : null } }\"\r\n            class=\"router\"\r\n            >API</router-link\r\n          >\r\n          <!-- <router-link\r\n            :to=\"{ path: '/tgbot', query: { token: isLoggedIn ? userToken : null } }\"\r\n            class=\"router\"\r\n            >TG BOT</router-link\r\n          > -->\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"!isLoggedIn\" class=\"login\">\r\n        <input v-model=\"userCode\" type=\"text\" placeholder=\"帳號\" class=\"input\" />\r\n        <input v-model=\"userPwd\" type=\"password\" placeholder=\"密碼\" class=\"input\" />\r\n        <button @click=\"login\" class=\"button\">登入</button>\r\n      </div>\r\n      <div v-if=\"isLoggedIn\" class=\"info\">\r\n        <H2 style=\"margin-right: 10px; color: #817777\">{{ currentTime }}</H2>\r\n        <button @click=\"logout\" class=\"button\">登出</button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <router-view></router-view>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userCode: \"\", // 使用者帳號綁定的資料屬性\r\n      userPwd: \"\", // 使用者密碼綁定的資料屬性\r\n      isLoggedIn: false, //預設登入狀態\r\n      userToken: \"\",\r\n      currentTime: this.getCurrentTime(),\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.isLoggedIn = localStorage.getItem(\"isLoggedIn\") === \"true\";\r\n    this.userToken = localStorage.getItem(\"userToken\");\r\n    this.checkTokenExpiration();\r\n\r\n    console.log(\"登入狀態：\", this.isLoggedIn);\r\n    console.log(\"Token：\", this.userToken);\r\n\r\n    //更新當前時間\r\n    setInterval(() => {\r\n      this.currentTime = this.getCurrentTime();\r\n      this.checkTokenExpiration();\r\n    }, 1000);\r\n  },\r\n\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await axios.post(\r\n          \"https://nc-ugs-bo.ms16618.com/mgtapipb.MgtApiService/AuthLogin\",\r\n          {\r\n            userCode: this.userCode,\r\n            userPwd: this.userPwd,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              accept: \"application/json\",\r\n            },\r\n          }\r\n        );\r\n\r\n        // 處理 API 回應的邏輯，可能是導航到其他頁面或顯示成功訊息等\r\n        console.log(\"登入成功！\", response.data.token);\r\n\r\n        // 將 token 儲存到 userToken 中\r\n        this.userToken = response.data.token;\r\n\r\n        // 設定 isLoggedIn 為 true\r\n        this.isLoggedIn = true;\r\n\r\n        // 將登入狀態保存到 localStorage\r\n        localStorage.setItem(\"isLoggedIn\", true);\r\n\r\n        // 设置过期时间为半小时后\r\n        const expirationTime = new Date().getTime() + 30 * 60 * 1000; // 半小时后的时间戳\r\n        localStorage.setItem(\"tokenExpiration\", expirationTime);\r\n\r\n        // 將Token保存到localStorage\r\n        localStorage.setItem(\"userToken\", this.userToken);\r\n\r\n        // 使用 router 的 push 方法導航到其他頁面，並將 token 作為查詢參數傳遞\r\n        this.$router.push({\r\n          query: { token: this.userToken },\r\n        });\r\n      } catch (error) {\r\n        // 處理登入失敗的情況，例如顯示錯誤訊息\r\n        console.error(\"登入失敗：\", error);\r\n      }\r\n    },\r\n\r\n    // 检查 token 是否过期\r\n    checkTokenExpiration() {\r\n      const expirationTime = localStorage.getItem(\"tokenExpiration\");\r\n      if (!expirationTime) {\r\n        // 如果没有过期时间，表示用户未登录或登录已过期\r\n        this.logout();\r\n      } else {\r\n        const currentTime = new Date().getTime();\r\n        if (currentTime > expirationTime) {\r\n          // 过期时间小于当前时间，表示 token 已过期\r\n          this.logout();\r\n        }\r\n      }\r\n    },\r\n\r\n    logout() {\r\n      // 清空 localStorage 中的登入狀態和Token\r\n      localStorage.removeItem(\"isLoggedIn\");\r\n      localStorage.removeItem(\"userToken\");\r\n      localStorage.removeItem(\"tokenExpiration\");\r\n\r\n      // 設定 isLoggedIn 為 false，清空使用者名稱\r\n      this.isLoggedIn = false;\r\n\r\n      // 使用 router 的 push 方法導航回首頁\r\n      this.$router.push({ name: \"home\" });\r\n    },\r\n    getCurrentTime() {\r\n      const now = new Date();\r\n      const hours = now.getHours().toString().padStart(2, \"0\");\r\n      const minutes = now.getMinutes().toString().padStart(2, \"0\");\r\n      const seconds = now.getSeconds().toString().padStart(2, \"0\");\r\n      return `${hours}:${minutes}:${seconds}`;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.menu {\r\n  padding: 10px;\r\n  text-align: center;\r\n  position: fixed;\r\n  top: 0%;\r\n  width: 100%;\r\n  background: linear-gradient(to right, #e4efdc, #aec0c0);\r\n  z-index: 1000; /* 設定層級，確保選單在其他元素上面 */\r\n  display: flex;\r\n  justify-content: space-between; /* 讓內容在 flex 容器中平均分布 */\r\n  align-items: center; /* 垂直置中 */\r\n}\r\n\r\n.page {\r\n  display: flex;\r\n  align-items: center; /* 垂直置中 */\r\n}\r\n\r\n.input {\r\n  margin-right: 5px;\r\n  padding: 7px;\r\n  width: 100px;\r\n  border-color: #a6c0e8;\r\n  border-radius: 5px; /* 輸入框的圓角 */\r\n}\r\n\r\n.login {\r\n  position: fixed;\r\n  right: 1%;\r\n}\r\n\r\n.info {\r\n  position: fixed;\r\n  right: 1%;\r\n  display: flex;\r\n  align-items: center; /* 垂直置中 */\r\n}\r\n\r\n.user {\r\n  margin-right: 10px;\r\n  font-weight: bold;\r\n}\r\n.button {\r\n  padding: 7px;\r\n  width: 100px;\r\n  font-weight: bold;\r\n  border: none; /* 移除按鈕的邊框 */\r\n  border-radius: 10px; /* 輸入框的圓角 */\r\n  background: linear-gradient(to top, #e4efdc, #84c7e3);\r\n}\r\n\r\n.button:hover {\r\n  background-color: #a6c0e8;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.router {\r\n  color: #817777;\r\n  font-weight: bold;\r\n  font-family: Tahoma, sans-serif;\r\n  font-size: 20px;\r\n  margin-right: 40px;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  transition: color 0.6s; /* 過渡效果 */\r\n}\r\n\r\n.router:hover {\r\n  color: #ffffffc2; /* 滑鼠懸停時改變文字顏色為白色 */\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EACNC,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAM;;;;;;EA0COA,KAAK,EAAC;;;;EAKPA,KAAK,EAAC;;;;;;uBAjDjCC,mBAAA,CAyDM,OAzDNC,UAyDM,GAxDJC,mBAAA,CAoDM,OApDNC,UAoDM,GAnDJD,mBAAA,CAwCM,OAxCNE,UAwCM,GAvCJC,YAAA,CAAmDC,sBAAA;IAAtCC,EAAE,EAAC,GAAG;IAACR,KAAK,EAAC;;sBAAS,MAAE,C,iBAAF,IAAE,E;;MAC1BS,KAAA,CAAAC,UAAU,I,cAArBT,mBAAA,CAqCM,OAAAU,UAAA,GApCJL,YAAA,CAOCC,sBAAA;IANEC,EAAE;;;eAA6EC,KAAA,CAAAC,UAAU,GAAGD,KAAA,CAAAG,SAAS;MAAA;;IAItGZ,KAAK,EAAC;;sBACL,MAAI,C,iBAAJ,MAAI,E;;iBAEPM,YAAA,CAICC,sBAAA;IAHEC,EAAE;MAAAK,IAAA;MAAAC,KAAA;QAAAC,KAAA,EAAuCN,KAAA,CAAAC,UAAU,GAAGD,KAAA,CAAAG,SAAS;MAAA;IAAA;IAChEZ,KAAK,EAAC;;sBACL,MAAI,C,iBAAJ,MAAI,E;;iBAUPM,YAAA,CAICC,sBAAA;IAHEC,EAAE;MAAAK,IAAA;MAAAC,KAAA;QAAAC,KAAA,EAAuCN,KAAA,CAAAC,UAAU,GAAGD,KAAA,CAAAG,SAAS;MAAA;IAAA;IAChEZ,KAAK,EAAC;;sBACL,MAAI,C,iBAAJ,MAAI,E;;iBAEPM,YAAA,CAICC,sBAAA;IAHEC,EAAE;MAAAK,IAAA;MAAAC,KAAA;QAAAC,KAAA,EAAkCN,KAAA,CAAAC,UAAU,GAAGD,KAAA,CAAAG,SAAS;MAAA;IAAA;IAC3DZ,KAAK,EAAC;;sBACL,MAAG,C,iBAAH,KAAG,E;;uDAUES,KAAA,CAAAC,UAAU,I,cAAtBT,mBAAA,CAIM,OAJNe,UAIM,G,gBAHJb,mBAAA,CAAuE;+DAAvDM,KAAA,CAAAQ,QAAQ,GAAAC,MAAA;IAAEC,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,IAAI;IAACpB,KAAK,EAAC;gCAA7CS,KAAA,CAAAQ,QAAQ,E,mBACxBd,mBAAA,CAA0E;+DAA1DM,KAAA,CAAAY,OAAO,GAAAH,MAAA;IAAEC,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,IAAI;IAACpB,KAAK,EAAC;gCAAhDS,KAAA,CAAAY,OAAO,E,GACvBlB,mBAAA,CAAiD;IAAxCmB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAExB,KAAK,EAAC;KAAS,IAAE,E,oCAE/BS,KAAA,CAAAC,UAAU,I,cAArBT,mBAAA,CAGM,OAHN0B,UAGM,GAFJrB,YAAA,CAAqEsB,aAAA;IAAjEC,KAA0C,EAA1C;MAAA;MAAA;IAAA;EAA0C;sBAAC,MAAiB,C,kCAAdpB,KAAA,CAAAqB,WAAW,M;;MAC7D3B,mBAAA,CAAkD;IAAzCmB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAM,MAAA,IAAAN,QAAA,CAAAM,MAAA,IAAAP,IAAA,CAAM;IAAExB,KAAK,EAAC;KAAS,IAAE,E,sCAG7CG,mBAAA,CAEM,cADJG,YAAA,CAA2B0B,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}